name: CI/CD

on:
  push:
    branches:
      - master
      - dev
  workflow_dispatch:

concurrency: ${{ github.ref }}

env:
  PROJECT_ID: voltaic-country-280607
  BUCKET: vuanem-insider
  ENV_FILE: env.yaml

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      service: ${{ steps.set-vars.outputs.service }}
      template: ${{ steps.set-vars.outputs.template }}
      image: ${{ steps.set-vars.outputs.image }}
    steps:
      - if: github.ref_name == 'dev'
        run: |
          echo "SERVICE=vuanem-insider-export-dev" >> $GITHUB_ENV

      - if: github.ref_name == 'master'
        run: |
          echo "SERVICE=vuanem-insider-export" >> $GITHUB_ENV

      - id: set-vars
        run: |
          echo "::set-output name=service::${{ env.SERVICE }}"
          echo "::set-output name=template::gs://${{ env.BUCKET }}/${{ env.SERVICE }}.json"
          echo "::set-output name=image::gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"


  build-template:
    runs-on: ubuntu-latest
    needs: set-env
    steps:
      - uses: actions/checkout@v2

      - uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - uses: "google-github-actions/setup-gcloud@v0"

      - name: Build & Push Image
        run: |-
          gcloud auth configure-docker
          docker build -t ${{ needs.set-env.outputs.image }} dataflow/
          docker push ${{ needs.set-env.outputs.image }}

  deploy-template:
    runs-on: ubuntu-latest
    needs:
      - set-env
      - build-template
    steps:
      - uses: actions/checkout@v2

      - uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - uses: "google-github-actions/setup-gcloud@v0"
      
      - run: >-
          gcloud dataflow flex-template build ${{ needs.set-env.outputs.template }} \
            --image="${{ needs.set-env.outputs.image }}" \
            --sdk-language="PYTHON" \
            --metadata-file="dataflow/metadata.json"

  deploy-function:
    runs-on: ubuntu-latest
    needs: set-env
    steps:
      - uses: actions/checkout@v2

      - run: |
          echo "INSIDER_API_KEY: ${{ secrets.INSIDER_API_KEY }}" >> ${{ env.ENV_FILE }}

          echo "TEMPLATE: ${{ needs.set-env.outputs.service }}" >> ${{ env.ENV_FILE }}

          echo "PUBLIC_URL: https://us-central1-${{ env.PROJECT_ID }}.cloudfunctions.net/${{ needs.set-env.outputs.service }}" >> ${{ env.ENV_FILE }}

      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"

      - run: npm install

      - run: tsc --sourceMap false

      - run: |
          cp package.json dist/package.json
          cp package-lock.json dist/package-lock.json

      - uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - uses: "google-github-actions/setup-gcloud@v0"

      - run: >-
          gcloud functions deploy ${{ needs.set-env.outputs.service }}
          --entry-point=main
          --source=dist
          --region=us-central1
          --timeout=530
          --memory=256MB
          --runtime=nodejs16
          --trigger-http
          --no-user-output-enabled
          --service-account=${{ env.GCP_SA }}
          --env-vars-file=${{ env.ENV_FILE }}
  
